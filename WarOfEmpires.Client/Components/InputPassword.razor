<input type="password" @bind-value="Password" @bind-value:event="oninput" @attributes="AdditionalAttributes" class="@Class" />

@code {
    private string? password;

    [Inject]
    public PasswordStrengthCalculator Calculator { get; set; } = null!;

    [Parameter]
    public string? Password {
        get => password;
        set {
            if (password == value) {
                return;
            }

            password = value;
            PasswordChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public EventCallback<string> PasswordChanged { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public IReadOnlyDictionary<string, object>? AdditionalAttributes { get; set; }

    public string Class {
        get {
            var strength = Calculator.Calculate(Password).ToString().ToLower();

            if (AdditionalAttributes?.TryGetValue("class", out var additionalClass) ?? false) {
                return $"{additionalClass} password-strength-{strength}";
            }
            else {
                return $"password-strength-{strength}";
            }
        }
    }
}