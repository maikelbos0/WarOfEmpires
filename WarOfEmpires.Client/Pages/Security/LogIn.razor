@page "/log-in"
@attribute [AllowAnonymous]
@using WarOfEmpires.Models.Security

<Title>Log in</Title>

@* TODO navigate to empire overview if no redirectUrl was found *@

@if (!string.IsNullOrEmpty(RedirectUrl)) {
    <ul>
        <li class="text-warning">You have been automatically logged out because your session expired or was invalid. Please re-enter your login details below.</li>
    </ul>
}

<Form Route="Security.LogIn" RequireAuthorization="false" Model="model" ResponseMessageHandler="StoreAccessToken" OnSuccess="@(RedirectUrl ?? "/")" SuccessMessage="You have logged in successfully.">
    <div class="form-field">
        <Label For="() => model.Email" />
        <InputText @bind-Value="model.Email" />
        <ValidationMessage For="() => model.Email" />
    </div>

    <div class="form-field">
        <Label For="() => model.Password" />
        <InputText type="password" @bind-Value="model.Password" />
        <ValidationMessage For="() => model.Password" />
    </div>
</Form>

@code {
    [Inject]
    public IAccessControlService AccessControlService { get; set; } = null!;

    [Parameter]
    [SupplyParameterFromQuery(Name = "redirectUrl")]
    public string? RedirectUrl { get; set; }

    LogInUserModel model = new();

    public async Task<bool> StoreAccessToken(HttpResponseMessage response) {
        var model = await response.Content.ReadFromJsonAsync<UserTokenModel>() ?? throw new InvalidOperationException("Missing token in response content");

        await AccessControlService.SignIn(model);

        return false;
    }
}