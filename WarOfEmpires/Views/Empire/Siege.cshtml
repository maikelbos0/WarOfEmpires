@model WarOfEmpires.Models.Empires.SiegeModel

@{
    ViewBag.Title = "Siege";
}

<h2>Siege</h2>

<p>
    Here you can purchase siege to help you scale your enemies' defences. Each siege weapon is tailored to a specific type of soldier and can
    not be used by other types.
</p>

<ul class="text-muted">
    <li>Siege engineers: @Model.Engineers.ToString(StringFormat.Integer)</li>
    <li>Total siege maintenance provided: @Model.TotalMaintenance.ToString(StringFormat.Integer) <icon type="Siege" /></li>
    <li>Available siege maintenance: @Model.AvailableMaintenance.ToString(StringFormat.Integer) <icon type="Siege" /></li>
</ul>

@using (Html.BeginForm(null, null, FormMethod.Post, new {
    data_success_message_build = "Your new siege weapons have been built.",
    data_success_message_discard = "Your siege weapons have been discarded."
})) {
    @Html.ValidationSummary(true, null, new { @class = "site-validation-summary text-danger" })

    @Html.HiddenFor(m => m.Engineers)
    @Html.HiddenFor(m => m.TotalMaintenance)
    @Html.HiddenFor(m => m.AvailableMaintenance)
    @Html.HiddenFor(m => m.Command)

    <div class="row">
        @for (var i = 0; i < Model.SiegeWeapons.Count; i++) {
            @Html.HiddenFor(m => m.SiegeWeapons[i].Type)
            @Html.HiddenFor(m => m.SiegeWeapons[i].Cost)
            @Html.HiddenFor(m => m.SiegeWeapons[i].CurrentCount)
            @Html.HiddenFor(m => m.SiegeWeapons[i].CurrentTroopCount)
            @Html.HiddenFor(m => m.SiegeWeapons[i].Description)
            @Html.HiddenFor(m => m.SiegeWeapons[i].Maintenance)
            @Html.HiddenFor(m => m.SiegeWeapons[i].Name)
            @Html.HiddenFor(m => m.SiegeWeapons[i].TroopCount)

            <div class="col-12 col-md-6 col-xl-4">
                <h4 class="mt-3">@Model.SiegeWeapons[i].Name</h4>

                <p>@Model.SiegeWeapons[i].Description</p>

                <ul class="text-muted">
                    <li>Build cost: @Html.DisplayFor(m => m.SiegeWeapons[i].Cost)</li>
                </ul>

                <div class="mb-3">
                    <label>Maintenance per weapon</label>
                    <div class="form-control" readonly="readonly">@Model.SiegeWeapons[i].Maintenance.ToString(StringFormat.Integer) <icon type="Siege" /></div>
                </div>

                <div class="mb-3">
                    <label>Troops per weapon</label>
                    <div class="form-control" readonly="readonly">@Model.SiegeWeapons[i].TroopCount.ToString(StringFormat.Integer) <icon type="Siege" /></div>
                </div>

                <div class="mb-3">
                    <label>Current weapons</label>
                    <div class="form-control" readonly="readonly">@Model.SiegeWeapons[i].CurrentCount.ToString(StringFormat.Integer) <icon type="Siege" /></div>
                </div>

                <div class="mb-3">
                    <label>Troops equipped</label>
                    <div class="form-control" readonly="readonly">@Model.SiegeWeapons[i].CurrentTroopCount.ToString(StringFormat.Integer) <icon type="Siege" /></div>
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.SiegeWeapons[i].Count)
                    @Html.TextBoxFor(m => m.SiegeWeapons[i].Count, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.SiegeWeapons[i].Count, null, new { @class = "small form-text text-danger" })
                </div>
            </div>
        }
    </div>

    <div class="row">
        <div class="col-6 offset-6 col-md-3 offset-md-9"><button type="submit" class="btn btn-primary w-100" value="build">Build</button></div>
    </div>

    <div class="row mt-1">
        <div class="col-6 offset-6 col-md-3 offset-md-9"><button type="submit" class="btn btn-secondary w-100" value="discard">Discard</button></div>
    </div>
}
