@model WarOfEmpires.Models.Empires.SiegeModel

@{
    ViewBag.Title = "Siege";
}

<h2>Siege</h2>

<p>
    Here you can purchase siege to help you scale your enemies' defences. Each siege weapon is tailored to a specific type of soldier and can
    not be used by other types.
</p>

<ul class="information-list">
    <li>Siege engineers: @Model.Engineers.ToString(StringFormat.Integer)</li>
    <li>Total siege maintenance provided: @Model.TotalMaintenance.ToString(StringFormat.Integer) @Html.Icon("Maintenance")</li>
    <li>Available siege maintenance: @Model.AvailableMaintenance.ToString(StringFormat.Integer) @Html.Icon("Maintenance")</li>
</ul>

@using (Html.BeginForm(null, null, FormMethod.Post, new {
    data_success_message_build = "Your new siege weapons have been built.",
    data_success_message_discard = "Your siege weapons have been discarded."
})) {
    @Html.ValidationSummary(true, null, new { @class = "site-validation-summary text-danger" })

    @Html.HiddenFor(m => m.Engineers)
    @Html.HiddenFor(m => m.TotalMaintenance)
    @Html.HiddenFor(m => m.AvailableMaintenance)
    @Html.HiddenFor(m => m.Command)

    <div class="row">
        <div class="col-2">
        </div>
        <div class="col-2 col-form-label">
            <strong>Maintenance per weapon</strong>
        </div>
        <div class="col-2 col-form-label">
            <strong>Troops per weapon</strong>
        </div>
        <div class="col-2 col-form-label">
            <strong>Current weapons</strong>
        </div>
        <div class="col-2 col-form-label">
            <strong>Troops equipped</strong>
        </div>
        <div class="col-2">
        </div>
    </div>

    for (var i = 0; i < Model.SiegeWeapons.Count; i++) {
        @Html.HiddenFor(m => m.SiegeWeapons[i].Type)
        @Html.HiddenFor(m => m.SiegeWeapons[i].Cost)
        @Html.HiddenFor(m => m.SiegeWeapons[i].CurrentCount)
        @Html.HiddenFor(m => m.SiegeWeapons[i].CurrentTroopCount)
        @Html.HiddenFor(m => m.SiegeWeapons[i].Description)
        @Html.HiddenFor(m => m.SiegeWeapons[i].Maintenance)
        @Html.HiddenFor(m => m.SiegeWeapons[i].Name)
        @Html.HiddenFor(m => m.SiegeWeapons[i].TroopCount)

        <div class="row">
            <div class="col-2 col-form-label">
                <strong>@Model.SiegeWeapons[i].Name</strong>
            </div>
            <div class="col-2 col-form-label">
                @Model.SiegeWeapons[i].Maintenance.ToString(StringFormat.Integer) @Html.Icon("Maintenance")
            </div>
            <div class="col-2 col-form-label">
                @Model.SiegeWeapons[i].TroopCount.ToString(StringFormat.Integer)
            </div>
            <div class="col-2 col-form-label">
                @Model.SiegeWeapons[i].CurrentCount.ToString(StringFormat.Integer)
            </div>
            <div class="col-2 col-form-label">
                @Model.SiegeWeapons[i].CurrentTroopCount.ToString(StringFormat.Integer)
            </div>
            <div class="col-2">
                @Html.TextBoxFor(m => m.SiegeWeapons[i].Count, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.SiegeWeapons[i].Count, null, new { @class = "small form-text text-danger" })
            </div>
        </div>

        <ul class="information-list">
            <li>@Model.SiegeWeapons[i].Description</li>
            <li>Build cost: @Html.DisplayFor(m => m.SiegeWeapons[i].Cost)</li>
        </ul>
    }

    <div class="row">
        <div class="col-10"></div>

        <div class="col-2">
            <button type="submit" class="btn btn-primary form-control" value="build">Build</button>
        </div>
    </div>

    <div class="row mt-1">
        <div class="col-10"></div>

        <div class="col-2">
            <button type="submit" class="btn btn-secondary form-control" value="discard">Discard</button>
        </div>
    </div>
}