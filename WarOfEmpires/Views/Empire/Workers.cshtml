@model WarOfEmpires.Models.Empires.WorkerModel

@{
    ViewBag.Title = "Workers";
}

<h2>Workers</h2>

<p>
    Here you can train or untrain your workers to make sure you produce the resources you require.
</p>

<ul>
    <li>Peasants available for training: @Model.CurrentPeasants.ToString(StringFormat.Integer)</li>
    <li>Worker training cost: @Html.DisplayFor(m => m.WorkerTrainingCost)</li>
    <li>Gold production per turn: @Model.CurrentGoldPerTurn.ToString(StringFormat.Integer) <span class="si si-gold" /></li>
    <li>Upkeep per turn: @Html.DisplayFor(m => m.UpkeepPerTurn)</li>
    <li>Recruits per day: @Model.RecruitsPerDay.ToString(StringFormat.Integer)</li>

    @if (Model.HasUpkeepRunOut) {
        <li class="text-danger">You aren't able to afford the upkeep costs; your workers have stopped working and your mercenaries have left your empire</li>
    }
    else if (Model.WillUpkeepRunOut) {
        <li class="text-danger">You will run out of the food and gold required for upkeep in the next 8 hours; if you run out, your workers will stop working and your mercenaries will leave your empire</li>
    }
</ul>

<div id="empire-housing-totals" class="partial-content">
</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new { data_success_message = "Your people were reassigned." })) {
    @Html.ValidationSummary(true, null, new { @class = "site-validation-summary text-danger" })
    @Html.HiddenFor(m => m.Command)
    @Html.HiddenFor(m => m.CurrentGoldPerTurn)
    @Html.HiddenFor(m => m.CurrentGoldPerWorkerPerTurn)
    @Html.HiddenFor(m => m.CurrentPeasants)
    @Html.HiddenFor(m => m.UpkeepPerTurn.Food)
    @Html.HiddenFor(m => m.UpkeepPerTurn.Gold)
    @Html.HiddenFor(m => m.WorkerTrainingCost.Gold)
    @Html.HiddenFor(m => m.RecruitsPerDay)
    @Html.HiddenFor(m => m.WillUpkeepRunOut)
    @Html.HiddenFor(m => m.HasUpkeepRunOut)
    @Html.HiddenFor(m => m.CurrentFarmers)
    @Html.HiddenFor(m => m.CurrentFoodPerWorkerPerTurn)
    @Html.HiddenFor(m => m.CurrentFoodPerTurn)
    @Html.HiddenFor(m => m.CurrentWoodWorkers)
    @Html.HiddenFor(m => m.CurrentWoodPerWorkerPerTurn)
    @Html.HiddenFor(m => m.CurrentWoodPerTurn)
    @Html.HiddenFor(m => m.CurrentStoneMasons)
    @Html.HiddenFor(m => m.CurrentStonePerWorkerPerTurn)
    @Html.HiddenFor(m => m.CurrentStonePerTurn)
    @Html.HiddenFor(m => m.CurrentOreMiners)
    @Html.HiddenFor(m => m.CurrentOrePerWorkerPerTurn)
    @Html.HiddenFor(m => m.CurrentOrePerTurn)

    <div class="row">
        <div class="col-4 col-form-label">
        </div>
        <div class="col-2 col-form-label">
            <strong>Workers</strong>
        </div>
        <div class="col-2 col-form-label">
            <strong>Production per worker</strong>
        </div>
        <div class="col-2 col-form-label">
            <strong>Total production</strong>
        </div>
        <div class="col-2">
        </div>
    </div>

    <div class="row">
        <div class="col-4 col-form-label">
            @Html.LabelFor(m => m.Farmers)
        </div>
        <div class="col-2 col-form-label">
            @Model.CurrentFarmers.ToString(StringFormat.Integer)
        </div>
        <div class="col-2 col-form-label">
            @Model.CurrentFoodPerWorkerPerTurn.ToString(StringFormat.Integer) <span class="si si-food"></span>
        </div>
        <div class="col-2 col-form-label">
            @Model.CurrentFoodPerTurn.ToString(StringFormat.Integer) <span class="si si-food"></span>
        </div>
        <div class="col-2">
            @Html.TextBoxFor(m => m.Farmers, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Farmers, null, new { @class = "small form-text text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="col-4 col-form-label">
            @Html.LabelFor(m => m.WoodWorkers)
        </div>
        <div class="col-2 col-form-label">
            @Model.CurrentWoodWorkers.ToString(StringFormat.Integer)
        </div>
        <div class="col-2 col-form-label">
            @Model.CurrentWoodPerWorkerPerTurn.ToString(StringFormat.Integer) <span class="si si-wood"></span>
        </div>
        <div class="col-2 col-form-label">
            @Model.CurrentWoodPerTurn.ToString(StringFormat.Integer) <span class="si si-wood"></span>
        </div>
        <div class="col-2">
            @Html.TextBoxFor(m => m.WoodWorkers, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.WoodWorkers, null, new { @class = "small form-text text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="col-4 col-form-label">
            @Html.LabelFor(m => m.StoneMasons)
        </div>
        <div class="col-2 col-form-label">
            @Model.CurrentStoneMasons.ToString(StringFormat.Integer)
        </div>
        <div class="col-2 col-form-label">
            @Model.CurrentStonePerWorkerPerTurn.ToString(StringFormat.Integer) <span class="si si-stone"></span>
        </div>
        <div class="col-2 col-form-label">
            @Model.CurrentStonePerTurn.ToString(StringFormat.Integer) <span class="si si-stone"></span>
        </div>
        <div class="col-2">
            @Html.TextBoxFor(m => m.StoneMasons, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.StoneMasons, null, new { @class = "small form-text text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="col-4 col-form-label">
            @Html.LabelFor(m => m.OreMiners)
        </div>
        <div class="col-2 col-form-label">
            @Model.CurrentOreMiners.ToString(StringFormat.Integer)
        </div>
        <div class="col-2 col-form-label">
            @Model.CurrentOrePerWorkerPerTurn.ToString(StringFormat.Integer) <span class="si si-ore"></span>
        </div>
        <div class="col-2 col-form-label">
            @Model.CurrentOrePerTurn.ToString(StringFormat.Integer) <span class="si si-ore"></span>
        </div>
        <div class="col-2">
            @Html.TextBoxFor(m => m.OreMiners, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.OreMiners, null, new { @class = "small form-text text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="col-10"></div>

        <div class="col-2">
            <button type="submit" class="btn btn-primary form-control" value="train">Train</button>
        </div>
    </div>

    <div class="row site-spaced-small">
        <div class="col-10"></div>

        <div class="col-2">
            <button type="submit" class="btn btn-secondary form-control" value="untrain">Untrain</button>
        </div>
    </div>
}
