@model WarOfEmpires.Models.Empires.WorkersModel

@{
    ViewBag.Title = "Workers";
}

<h2>Workers</h2>

<p>
    Here you can train or untrain your workers to make sure you produce the resources you require.
</p>

<ul class="information-list">
    <li>Peasants available for training: @Model.CurrentPeasants.ToString(StringFormat.Integer)</li>
    <li>Worker training cost: @Html.DisplayFor(m => m.WorkerCost)</li>
    <li>Gold production per turn: @Model.CurrentGoldPerTurn.ToString(StringFormat.Integer) @Html.Icon("Gold")</li>
    <li>Upkeep per turn: @Html.DisplayFor(m => m.UpkeepPerTurn)</li>
    <li>Recruits per day: @Model.RecruitsPerDay.ToString(StringFormat.Integer)</li>

    @if (Model.HasUpkeepRunOut) {
        <li class="text-danger">You aren't able to afford the upkeep costs; your workers have stopped working and your mercenaries have left your empire</li>
    }
    else if (Model.WillUpkeepRunOut) {
        <li class="text-danger">You will run out of the food and gold required for upkeep in the next 8 hours; if you run out, your workers will stop working and your mercenaries will leave your empire</li>
    }
</ul>

<div id="empire-housing-totals" class="partial-content">
</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new {
    data_success_message_train = "Your peasants were trained.",
    data_success_message_untrain = "Your workers were untrained."
})) {
    @Html.ValidationSummary(true, null, new { @class = "site-validation-summary text-danger" })
    @Html.HiddenFor(m => m.Command)
    @Html.HiddenFor(m => m.CurrentGoldPerTurn)
    @Html.HiddenFor(m => m.CurrentGoldPerWorkerPerTurn)
    @Html.HiddenFor(m => m.CurrentPeasants)
    @Html.HiddenFor(m => m.WorkerCost)
    @Html.HiddenFor(m => m.UpkeepPerTurn)
    @Html.HiddenFor(m => m.RecruitsPerDay)
    @Html.HiddenFor(m => m.WillUpkeepRunOut)
    @Html.HiddenFor(m => m.HasUpkeepRunOut)
    
    <div class="row">
        <div class="col-4 col-form-label">
        </div>
        <div class="col-2 col-form-label">
            <strong>Workers</strong>
        </div>
        <div class="col-2 col-form-label">
            <strong>Production per worker</strong>
        </div>
        <div class="col-2 col-form-label">
            <strong>Total production</strong>
        </div>
        <div class="col-2">
        </div>
    </div>

    for (var i = 0; i < Model.Workers.Count; i++) {
        if (!Model.Workers[i].IsProducer) {
            continue;
        }

        @Html.HiddenFor(m => m.Workers[i].Type)
        @Html.HiddenFor(m => m.Workers[i].IsProducer)
        @Html.HiddenFor(m => m.Workers[i].Name)
        @Html.HiddenFor(m => m.Workers[i].Cost)
        @Html.HiddenFor(m => m.Workers[i].CurrentProductionPerWorkerPerTurn)
        @Html.HiddenFor(m => m.Workers[i].CurrentProductionPerTurn)
        @Html.HiddenFor(m => m.Workers[i].CurrentWorkers)

        <div class="row">
            <div class="col-4 col-form-label">
                <strong>@Model.Workers[i].Name</strong>
            </div>
            <div class="col-2 col-form-label">
                @Model.Workers[i].CurrentWorkers.ToString(StringFormat.Integer)
            </div>
            <div class="col-2 col-form-label">
                @Model.Workers[i].CurrentProductionPerWorkerPerTurn.ToString(StringFormat.Integer)
                @Html.IconFor(m => m.Workers[i].Type)
            </div>
            <div class="col-2 col-form-label">
                @Model.Workers[i].CurrentProductionPerTurn.ToString(StringFormat.Integer)
                @Html.IconFor(m => m.Workers[i].Type)
            </div>
            <div class="col-2">
                @Html.TextBoxFor(m => m.Workers[i].Count, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Workers[i].Count, null, new { @class = "small form-text text-danger" })
            </div>
        </div>
    }

    <div class="row">
        <div class="col-4 col-form-label">
        </div>
        <div class="col-2 col-form-label">
            <strong>Workers</strong>
        </div>
        <div class="col-2 col-form-label">
            <strong>Capacity per worker</strong>
        </div>
        <div class="col-2 col-form-label">
            <strong>Total capacity</strong>
        </div>
        <div class="col-2">
        </div>
    </div>


    for (var i = 0; i < Model.Workers.Count; i++) {
        if (Model.Workers[i].IsProducer) {
            continue;
        }

        @Html.HiddenFor(m => m.Workers[i].Type)
        @Html.HiddenFor(m => m.Workers[i].IsProducer)
        @Html.HiddenFor(m => m.Workers[i].Name)
        @Html.HiddenFor(m => m.Workers[i].Cost)
        @Html.HiddenFor(m => m.Workers[i].CurrentProductionPerWorkerPerTurn)
        @Html.HiddenFor(m => m.Workers[i].CurrentProductionPerTurn)
        @Html.HiddenFor(m => m.Workers[i].CurrentWorkers)

        <div class="row">
            <div class="col-4 col-form-label">
                <strong>@Model.Workers[i].Name</strong>
            </div>
            <div class="col-2 col-form-label">
                @Model.Workers[i].CurrentWorkers.ToString(StringFormat.Integer)
            </div>
            <div class="col-2 col-form-label">
                @Model.Workers[i].CurrentProductionPerWorkerPerTurn.ToString(StringFormat.Integer)
                @Html.IconFor(m => m.Workers[i].Type)
            </div>
            <div class="col-2 col-form-label">
                @Model.Workers[i].CurrentProductionPerTurn.ToString(StringFormat.Integer)
                @Html.IconFor(m => m.Workers[i].Type)
            </div>
            <div class="col-2">
                @Html.TextBoxFor(m => m.Workers[i].Count, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Workers[i].Count, null, new { @class = "small form-text text-danger" })
            </div>
        </div>

        <ul class="information-list">
            <li>Training cost: @Html.DisplayFor(m => m.Workers[i].Cost)</li>
        </ul>
    }

    <div class="row">
        <div class="col-10"></div>

        <div class="col-2">
            <button type="submit" class="btn btn-primary form-control" value="train">Train</button>
        </div>
    </div>

    <div class="row site-spaced-small">
        <div class="col-10"></div>

        <div class="col-2">
            <button type="submit" class="btn btn-secondary form-control" value="untrain">Untrain</button>
        </div>
    </div>
}
