@model WarOfEmpires.Models.Markets.MarketModel

@{
    ViewBag.Title = "Sell resources";
}

<h2>Sell resources</h2>

<p>
    Send out new caravans to sell your resources on the market, or call back caravans currently on the market. You are able to send off multiple caravans at once,
    provided you have enough available merchants. Please note that the game collects a 15% tax on all sales.
</p>

<ul class="text-muted">
    <li>Total number of merchants: @Model.TotalMerchants.ToString(StringFormat.Integer)</li>
    <li>Available merchants: @Model.AvailableMerchants.ToString(StringFormat.Integer)</li>
    <li>Capacity per caravan: @Model.CaravanCapacity.ToString(StringFormat.Integer) @await Html.Icon(IconType.Market)</li>
    <li>Total available capacity: @Model.AvailableCapacity.ToString(StringFormat.Integer) @await Html.Icon(IconType.Market)</li>
</ul>

@using (Html.BeginForm("Sell", null, FormMethod.Post, new {
    data_success_message = "Your resources have been sent to the market."
})) {
    @Html.ValidationSummary(true, null, new { @class = "site-validation-summary text-danger" })

    @Html.HiddenFor(m => m.TotalMerchants)
    @Html.HiddenFor(m => m.AvailableMerchants)
    @Html.HiddenFor(m => m.CaravanCapacity)
    @Html.HiddenFor(m => m.AvailableCapacity)

    <div class="row">
        @for (var i = 0; i < Model.Merchandise.Count; i++) {
            @Html.HiddenFor(m => m.Merchandise[i].Type)
            @Html.HiddenFor(m => m.Merchandise[i].Name)
            @Html.HiddenFor(m => m.Merchandise[i].AvailableAtLowestPrice)
            @Html.HiddenFor(m => m.Merchandise[i].LowestPrice)
            @Html.HiddenFor(m => m.Merchandise[i].TotalAvailable)

            <div class="col-12 col-md-6 col-lg-3">
                <h4>@Model.Merchandise[i].Name</h4>

                <div class="form-group">
                    <label>Minimum price</label>
                    <div class="form-control" readonly="readonly">@Model.Merchandise[i].LowestPrice.ToString(StringFormat.Integer)</div>
                </div>

                <div class="form-group">
                    <label>Available at minimum price</label>
                    <div class="form-control" readonly="readonly">@Model.Merchandise[i].AvailableAtLowestPrice.ToString(StringFormat.Integer)</div>
                </div>

                <div class="form-group">
                    <label>Total available</label>
                    <div class="form-control" readonly="readonly">@Model.Merchandise[i].TotalAvailable.ToString(StringFormat.Integer)</div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Merchandise[i].Quantity)
                    @Html.TextBoxFor(m => m.Merchandise[i].Quantity, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Merchandise[i].Quantity, null, new { @class = "small form-text text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Merchandise[i].Price)
                    @Html.TextBoxFor(m => m.Merchandise[i].Price, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Merchandise[i].Price, null, new { @class = "small form-text text-danger" })
                </div>
            </div>
        }
    </div>

    <div class="row">
        <div class="col-6 offset-6 col-md-3 offset-md-9"><button type="submit" class="btn btn-primary w-100">Sell</button></div>
    </div>
}

@{
    // TODO enable
    // Html.RenderAction("_Caravans");
}
